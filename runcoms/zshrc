if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

source /Users/rainevi/.zshsecrets

export LC_CTYPE=en_US.UTF-8
export LC_ALL=en_US.UTF-8

fpath=( ~/.zfunc "${fpath[@]}" )
autoload -Uz `ls ~/.zfunc`

alias -g ...='../..'
alias -g ....='../../..'
alias -g .....='../../../..'
alias -g H="| head"
alias -g T="| tail"
alias -g C="| wc -l"
alias -g L="| less"
alias -g G="| ag"
alias -g S="| sed -e"
alias -g A="| awk"
alias -g J="| jq ."
alias vim="mvim -v"
alias svim="sudo mvim -v"
alias v="vim"
alias irc="mosh raine@vilja -- screen -rd irc"
alias json="python -mjson.tool"
alias jt="json"
alias lcc='fc -ln -1 | awk "{\$1=\$1}1" ORS="" | pbcopy' # copy last command
alias goog="google"
# alias ack="ag"
alias t="teamocil"
alias th="teamocil --here"

alias nisd="npm install --save-dev"
alias nis="npm install --save"
alias nig="npm install -g"

alias noderepl="node ~/noderepl/myrepl.js"
alias now='date -u +"%Y-%m-%dT%H:%M:%SZ"'


npm-bin-path() {
  echo "adding `npm bin` to path"
  export PATH=$(npm bin):$PATH
  echo $PATH
}

# align graphite raw output
alias align="tr '|' , | cut -d',' -f1,5- | sed 's/\\.0//g' | column -t -s,"

debug() {
  export DEBUG=*
}

alias nodebug="unset DEBUG"

mcd() { mkdir $1 && cd $1; }

git-ignore() {
  echo $1 >> .gitignore
}

eval "$(hub alias -s)"
# eval "`npm completion`"
# eval "$(gulp --completion=zsh)"
compctl -g '~/.teamocil/*(:t:r)' teamocil

fasd_cache="$HOME/.fasd-init-bash"
if [ "$(command -v fasd)" -nt "$fasd_cache" -o ! -s "$fasd_cache" ]; then
  fasd --init auto >| "$fasd_cache"
fi
source "$fasd_cache"
unset fasd_cache

alias j='fasd_cd -d'     # cd, same functionality as j in autojump
alias jj='fasd_cd -d -i' # cd with interactive selection
alias v='f -e "mvim -v"' # quick opening files with vim
alias o='a -e open'      # quick opening files with xdg-open

function restart-audio; {
  sudo kill `ps -ax | grep 'coreaudiod' | grep 'sbin' | awk '{print $1}'`
}

function curlj {
  curl -s "$@" | jt
}

# URL encode something and print it.
function url-encode; {
  setopt extendedglob
  echo "${${(j: :)@}//(#b)(?)/%$[[##16]##${match[1]}]}"
}

# Search google for the given keywords.
function google; {
  open "http://www.google.com/search?q=`url-encode "${(j: :)@}"`"
}

function beautify; {
  uglifyjs "$@" -b -o "$@"
}

function trim-empty; {
  convert "$1" -fuzz "1%" -trim +repage "$1"
}

alias buh="grep --line-buffered --color=none 'app\[web.\d\+\]' | sed -l 's/.*app\[web\..*\]\: //' | bunyan"

# Change directory to the current Finder directory
cdf() {
  target=`osascript -e 'tell application "Finder" to if (count of Finder windows) > 0 then get POSIX path of (target of front Finder window as text)'`
  if [ "$target" != "" ]; then
    cd "$target"; pwd
  else
    echo 'No Finder window found' >&2
  fi
}

botch() {
  printf '\e[?25l'
  while true; do
    (echo -en '\033[H'
      CMD="$@"
      bash -c "$CMD" | while read LINE; do
        echo -n "$LINE"
        echo -e '\033[0K'
      done
      echo -en '\033[J') | tac | tac
    sleep 2
  done
}

# run something in a directory and go back
indir() { (cd "$1" && shift && eval "$@"); }

PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting
PATH=$PATH:$HOME/bin
PATH=$PATH:"/usr/local/heroku/bin"
PATH=$HOME/.cabal/bin:$PATH

source /Users/rainevi/.zsh/zaw/zaw.zsh
bindkey '^R' zaw-history
bindkey '^L' zaw-ack
bindkey -M filterselect '^E' accept-search

zstyle ':filter-select:highlight' matched fg=green
zstyle ':filter-select' case-insensitive yes # enable case-insensitive
zstyle ':filter-select' extended-search yes # see below

# export MAKEFLAGS="-j 8"
export EDITOR="mvim -v"
# source /Users/rainevi/.rvm/scripts/rvm
# export SBT_OPTS="-Xss2M -Xmx1024M -XX:MaxPermSize=256M"
export GOPATH=$HOME/go
export PATH=$PATH:$GOPATH/bin
export NVM_DIR="/Users/rainevi/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm

bindkey '^P' up-history
bindkey '^N' down-history
bindkey '^?' backward-delete-char
bindkey '^h' backward-delete-char
bindkey '^w' backward-kill-word
export KEYTIMEOUT=1 # vi mode esc timeout
